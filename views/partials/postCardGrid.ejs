<style>
  .card-title {
  color: #222 !important; 
  font-size: 1.3rem;
}
  .post-card {
  width: 100%;
  height: auto;
  background-color: #f7f1ec !important;
  border: 1px dashed #DCBEBE;
}

.post-card img {
  width: 100%;
  height: auto;
  object-fit: contain;
}
.icon-btn {
  background: none;
  border: none;
  padding: 0;
  margin: 0;
  cursor: pointer;
}
 
@media (max-width: 1200px) {
  .post-card {
    width: 220px;
  }
  .post-card img { height: auto; }
}

@media (max-width: 992px) {
  .post-card {
    width: 200px;
  }
  .post-card img { height: auto; }
}

@media (max-width: 768px) {
  .post-card {
    width: 100%;
  }
  .post-card img {
    height: auto;
  }
}
.masonry {
  column-count: 4;
  column-gap: 16px !important;
  padding-left: 1rem; 
}

.masonry .col {
  display: inline-block !important;
  width: 100% !important;
  break-inside: avoid !important;
  margin: 0 0 16px !important; 
  vertical-align: top; 
}

.masonry .col .post-card {
  width: 100% !important;
}


.masonry1 {
  /* column-width: 240px !important; */
  column-count: 5;
  column-gap: 16px !important;
  padding-left: 1rem;
}

.masonry1 .col {
  display: inline-block !important;
  width: 100% !important;
  break-inside: avoid !important;
  margin: 0 0 16px !important;
  vertical-align: top; 
}

.masonry1 .col .post-card {
  width: 100% !important;
}
.like-btn i.bi-heart {
  -webkit-text-fill-color: transparent !important;
  -webkit-text-stroke-width: 1px !important;
  -webkit-text-stroke-color: #9f0026 !important;
  font-size: 1rem !important;
}

.like-btn i.bi-heart-fill {
  color: #9f0026 !important;
  /* -webkit-text-stroke-width: 1px !important; */
  -webkit-text-stroke-color: #9f0026!important;
  font-size: 1rem !important;
}
.save-btn .bi-bookmark{
   -webkit-text-fill-color: transparent !important;
  -webkit-text-stroke-width: 1px !important;
  -webkit-text-stroke-color: #71a1cc !important;
  font-size: 1rem !important;
}
.save-btn i.bi-bookmark-fill{
  color: #71a1cc !important;
  /* -webkit-text-stroke-width: 1px !important; */
  -webkit-text-stroke-color: #71a1cc !important;
  font-size: 1rem !important;
}




</style>
<div class=" col">
  <!-- <div class="card-wrapper"> -->
  <div class="card shadow-sm rounded post-card">
    <a href="/posts/<%= post._id %>">
      <img
        src="<%= post.coverImage || post.steps[0]?.image || '/images/default.jpg' %>"
        class="card-img-top"
        alt="Post Image"
      >
    </a>
    <div class="card-body">
      <a href="/posts/<%= post._id %>" style="text-decoration:none; color:inherit;">
        <h5 class="card-title mb-1 fw-bold"><%= post.title %></h5>
      </a>

      <div class="d-flex flex-wrap gap-2 mb-2">
        <% const maxTags = 4; const shown = post.tags.slice(0, maxTags); const hiddenCount = Math.max(0, post.tags.length - maxTags); %>
        <% shown.forEach(tag => { %>
          <a
            href="/tags/<%= encodeURIComponent(tag) %>"
            class="badge bg-light text-dark text-decoration-none me-1 mb-1"
          >
            #<%= tag %>
          </a>
        <% }) %>
        <% if (hiddenCount > 0) { %>
          <span class="badge bg-light text-muted">+<%= hiddenCount %></span>
        <% } %>
      </div>

      <div class="d-flex justify-content-between">
        <% 
  const currentUserId = typeof currentUser === 'object' ? currentUser?._id?.toString() : currentUser?.toString();
  const liked = post.likedBy.some(u => u._id.toString() === currentUserId);
  const bookmarked = post.bookmarkedBy.some(u => u._id.toString() === currentUserId);
%>

        <%# const liked = post.likedBy.some(u => u._id.toString() === currentUser?.toString()); %>
        <form action="/posts/<%= post._id %>/like" method="POST" class="like-form" data-post-id="<%= post._id %>">
          <button type="submit" class="icon-btn btn btn-light like-btn border-0">
            <i class="<%= liked ? 'bi bi-heart-fill text-danger' : 'bi bi-heart text-secondary' %>"></i>
            <span class="like-count"><%= post.likedBy.length %></span>
          </button>
        </form>
<script>
  (function(){
    const form = document.currentScript.previousElementSibling;
    if (!form || !form.matches('form.like-form')) return;
    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      try {
        const res = await fetch(form.action, { method: 'POST', headers: { 'X-Requested-With': 'XMLHttpRequest' } });
        if (!res.ok) return;
        const data = await res.json();
        const icon = form.querySelector('i');
        const count = form.querySelector('.like-count');
        if (icon && data) {
          icon.className = data.liked ? 'bi bi-heart-fill text-danger' : 'bi bi-heart text-secondary';
        }
        if (count) count.textContent = data.count;
      } catch(err) { console.error('Like failed', err); }
    });
  })();
</script>

        <%# const bookmarked = post.bookmarkedBy.some(u => u._id.toString() === currentUser?.toString()); %>
        <form action="/posts/<%= post._id %>/bookmark" method="POST">
          <button type="submit" class="icon-btn btn save-btn btn-light border-0">
            <i class="<%= bookmarked ? 'bi bi-bookmark-fill text-primary' : 'bi bi-bookmark text-secondary' %>"></i>
          </button>
        </form>
      </div>
    </div>
  </div>
</div>



<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha2/dist/js/bootstrap.bundle.min.js"></script>